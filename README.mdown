# Hel-Log

Simple logging. Designed to work without imports and to automatically inject the origin of the log message.

Output is determined by the Flash Player you are running, if it's the debug player then you get:

    log.debug('one');
    log.info('two');
    log.warn('three');
    log.error('four');
    log.fatal('five');
    
    [DEBUG] org.helvector.BeanCounter::addUp() one
    [INFO]  org.helvector.BeanCounter::addUp() two
    [WARN]  org.helvector.BeanCounter::addUp() three
    [ERROR] org.helvector.BeanCounter::addUp() four
    [FATAL] org.helvector.BeanCounter::addUp() five

Otherwise it's a shorter:

    log.debug('foo bar')
    
    [DEBUG] foo bar.

Substitution is also possible:

    log.info('Cheese {0}', 'Rules');
    
    [INFO] org.helvector.Test::logTest() Cheese Rules.

## Support

 * [Issue tracker][issue_tracker]
 * [Repository][repo]

Bugs and issues should be reported via the [issue tracker][issue_tracker].
Source can be viewed and forked via the [GitHub repository][repo].

## Author

[Simon Gregory][sg_blog]

## License

See the accompanying LICENSE.txt file for details.

[repo]: http://github.com/simongregory/hel-log/
[issue_tracker]: http://github.com/simongregory/hel-log/issues
[sg_blog]: http://blog.simonregory.com
[adobe_flash]: http://www.adobe.com/products/flashplayer/
[adobe_flash_tool]: http://www.adobe.com/products/flash/
[flex_conventions]: http://opensource.adobe.com/wiki/display/flexsdk/Coding+Conventions
